@model AgriEnergyConnects.Models.Product

@{
    ViewData["Title"] = "Create Product";
}

<div class="container mt-4">
    <h2 class="mb-4">Create New Product</h2>

    <form asp-action="Create" method="post">
        @* Show validation summary only if there are errors *@
        @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)
        {
            <div asp-validation-summary="All" class="alert alert-danger"></div>
        }

        <div class="mb-3">
            <label asp-for="Name" class="form-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Category" class="form-label"></label>
            <input asp-for="Category" class="form-control" />
            <span asp-validation-for="Category" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="ProductionDate" class="form-label"></label>
            <input asp-for="ProductionDate" class="form-control" type="date" />
            <span asp-validation-for="ProductionDate" class="text-danger"></span>
        </div>

        <!-- Hidden FarmerId input to avoid validation error if pre-assigned -->
        <input type="hidden" asp-for="FarmerId" />

        <div class="d-flex gap-2">
            <button type="submit" class="btn btn-primary">Save</button>
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
